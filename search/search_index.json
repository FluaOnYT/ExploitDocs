{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This is a static website dedicated to writing documentation for the functions of exploits Made with love by Flua","title":"Welcome"},{"location":"#welcome","text":"This is a static website dedicated to writing documentation for the functions of exploits Made with love by Flua","title":"Welcome"},{"location":"Drawing/","text":"Drawing The drawing class specifies a class used in drawing UI outside of Roblox's normal UI Drawing.new function Drawing.new(Type: string) -> Drawing Create a new drawing object of the specified type. The possible types are 'Line', 'Text', 'Image', 'Circle', 'Square', 'Quad' (not supported by all exploits) , and 'Triangle'. Parameters Type - The type of drawing object to create. Drawing.Fonts Drawing.Fonts: { UI: 0, System: 1, Plex: 2, Monospace: 3, } A table containing the available font names, this may vary BaseDrawing The base class of which all drawing objects inherit from Property Type Description Visible boolean Whether the drawing is visible, some defaults to false ZIndex number Determines the order in which a Drawing renders Transparency number The opacity of the drawing (1 is opaque, 0 is transparent) Color Color3 The color of the drawing Destroy() function Destroys the drawing Line Renders a line that starts at From and ends at To Property Type Description From Vector2 The starting point of the line To Vector2 The ending point of the line Thickness number The thickness of the line Text Renders text at Position . Property Type Description Text string The text to render TextBounds Vector2 The size of the text, this is a read only property Font Drawing.Font The font to use Size number The size of the text Position Vector2 The position of the text Center boolean Whether the text should be centered horizontally Outline boolean Whether the text should be outlined OutlineColor Color3 The color of the outline Image Draws the image data to the screen, and the property Data MUST be a raw image data Property Type Description Data string The raw image data Size Vector2 The size of the image Position Vector2 The position of the image Rounding number The rounding of the image Circle Draws a circle that is centered at Position The circle is not a proper circle, to make it more accurate please increate the property NumSides Property Type Description NumSides number The number of sides of the circle Radius number The radius of the circle Position Vector2 The position of the center of the circle Thickness number If Filled is false, specifies the thickness of the outline Filled boolean Whether the circle should be filled Square Draws a rectangle starting at Position and ending at Position + Size . Property Type Description Size Vector2 The size of the square. Position Vector2 The position of the top-left corner of the square. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the square should be filled. Quad Draws a four-sided figure connecting to each of the four points. Property Type Description PointA Vector2 The first point. PointB Vector2 The second point. PointC Vector2 The third point. PointD Vector2 The fourth point. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the quad should be filled. Triangle Draws a triangle connecting to each of the three points. Property Type Description PointA Vector2 The first point. PointB Vector2 The second point. PointC Vector2 The third point. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the triangle should be filled. cleardrawcache function cleardrawcache(): () Destroys every drawing object in the cache, it invalidates references to the drawing objects getrenderproperty function getrenderproperty(drawing: Drawing, property: string): any Gets the value of a property of a drawing. Functionally identical to drawing[property] . Parameters drawing - The drawing to get the property of. property - The property to get. isrenderobj function isrenderobj(Object: any): boolean Returns whether the given object is a valid Drawing. Parameters Object - Can be anything setrenderproperty function setrenderproperty(Drawing: Drawing, Property: string, Value: any): () Sets the value of a property of a drawing Parameters drawing - The drawing to set the property of property - The property to set value - The value to set the property to","title":"Drawing"},{"location":"Drawing/#drawing","text":"The drawing class specifies a class used in drawing UI outside of Roblox's normal UI","title":"Drawing"},{"location":"Drawing/#drawingnew","text":"function Drawing.new(Type: string) -> Drawing Create a new drawing object of the specified type. The possible types are 'Line', 'Text', 'Image', 'Circle', 'Square', 'Quad' (not supported by all exploits) , and 'Triangle'.","title":"Drawing.new"},{"location":"Drawing/#parameters","text":"Type - The type of drawing object to create.","title":"Parameters"},{"location":"Drawing/#drawingfonts","text":"Drawing.Fonts: { UI: 0, System: 1, Plex: 2, Monospace: 3, } A table containing the available font names, this may vary","title":"Drawing.Fonts"},{"location":"Drawing/#basedrawing","text":"The base class of which all drawing objects inherit from Property Type Description Visible boolean Whether the drawing is visible, some defaults to false ZIndex number Determines the order in which a Drawing renders Transparency number The opacity of the drawing (1 is opaque, 0 is transparent) Color Color3 The color of the drawing Destroy() function Destroys the drawing","title":"BaseDrawing"},{"location":"Drawing/#line","text":"Renders a line that starts at From and ends at To Property Type Description From Vector2 The starting point of the line To Vector2 The ending point of the line Thickness number The thickness of the line","title":"Line"},{"location":"Drawing/#text","text":"Renders text at Position . Property Type Description Text string The text to render TextBounds Vector2 The size of the text, this is a read only property Font Drawing.Font The font to use Size number The size of the text Position Vector2 The position of the text Center boolean Whether the text should be centered horizontally Outline boolean Whether the text should be outlined OutlineColor Color3 The color of the outline","title":"Text"},{"location":"Drawing/#image","text":"Draws the image data to the screen, and the property Data MUST be a raw image data Property Type Description Data string The raw image data Size Vector2 The size of the image Position Vector2 The position of the image Rounding number The rounding of the image","title":"Image"},{"location":"Drawing/#circle","text":"Draws a circle that is centered at Position The circle is not a proper circle, to make it more accurate please increate the property NumSides Property Type Description NumSides number The number of sides of the circle Radius number The radius of the circle Position Vector2 The position of the center of the circle Thickness number If Filled is false, specifies the thickness of the outline Filled boolean Whether the circle should be filled","title":"Circle"},{"location":"Drawing/#square","text":"Draws a rectangle starting at Position and ending at Position + Size . Property Type Description Size Vector2 The size of the square. Position Vector2 The position of the top-left corner of the square. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the square should be filled.","title":"Square"},{"location":"Drawing/#quad","text":"Draws a four-sided figure connecting to each of the four points. Property Type Description PointA Vector2 The first point. PointB Vector2 The second point. PointC Vector2 The third point. PointD Vector2 The fourth point. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the quad should be filled.","title":"Quad"},{"location":"Drawing/#triangle","text":"Draws a triangle connecting to each of the three points. Property Type Description PointA Vector2 The first point. PointB Vector2 The second point. PointC Vector2 The third point. Thickness number If Filled is false, specifies the thickness of the outline. Filled boolean Whether the triangle should be filled.","title":"Triangle"},{"location":"Drawing/#cleardrawcache","text":"function cleardrawcache(): () Destroys every drawing object in the cache, it invalidates references to the drawing objects","title":"cleardrawcache"},{"location":"Drawing/#getrenderproperty","text":"function getrenderproperty(drawing: Drawing, property: string): any Gets the value of a property of a drawing. Functionally identical to drawing[property] .","title":"getrenderproperty"},{"location":"Drawing/#parameters_1","text":"drawing - The drawing to get the property of. property - The property to get.","title":"Parameters"},{"location":"Drawing/#isrenderobj","text":"function isrenderobj(Object: any): boolean Returns whether the given object is a valid Drawing.","title":"isrenderobj"},{"location":"Drawing/#parameters_2","text":"Object - Can be anything","title":"Parameters"},{"location":"Drawing/#setrenderproperty","text":"function setrenderproperty(Drawing: Drawing, Property: string, Value: any): () Sets the value of a property of a drawing","title":"setrenderproperty"},{"location":"Drawing/#parameters_3","text":"drawing - The drawing to set the property of property - The property to set value - The value to set the property to","title":"Parameters"},{"location":"Enviroment/","text":"Enviroment This is a list of functions relating to the enviromental state of scripts getgc function getgc(IncludeTables: boolean) -> <function | userdata | table> Returns a list of objects in the Luau garbage collector Parameters IncludeTables - Whether or not to include tables in the list. getgenv function getgenv() -> { table(any) } Returns the global environment of the executor getrenv function getrenv() -> { [string]: any } Returns the global environment of the game client getsenv function getsenv(Script: <LocalScript | ModuleScript>) -> { list(any) } Returns the global environment of the given script Parameters Script - A client-running LocalScript or ModuleScript getloadedmodules function getloadedmodules(ExclodeCoreScripts: boolean) -> table(ModuleScript) Returns a list of ModuleScripts that have been loaded within the game Parameters ExcludeCoreScripts - Whether or not to exclude core modules from the list. getrunningscripts function getrunningscripts() -> table(LocalScript | ModuleScript) Returns a list of scripts that are currently running within the game getscriptbytecode function getscriptbytecode(Script: <LocalScript | ModuleScript>) -> string Returns the raw Luau bytecode of the given script Parameters Script - A client-running LocalScript or ModuleScript getscriptclosure function getscriptclosure(Script: <LocalScript | ModuleScript>) -> function Generates a new closure using the bytecode of Script Parameters Script - The target script to recreate it's closure getscripthash function getscripthash(Script: <LocalScript | ModuleScript>) -> string Returns the SHA384 hash of the script's bytecode Parameters Script - A client-running LocalScript or ModuleScript getscripts function getscripts() -> <LocalScript | ModuleScript> Get the scripts inside the game, both disabled and enabled getthreadidentity function getthreadidentity() -> number Returns the identity of the current thread setthreadidentity function setthreadidentity(Identity: number) Changes the identity of the current thread to Identity","title":"Enviroment"},{"location":"Enviroment/#enviroment","text":"This is a list of functions relating to the enviromental state of scripts","title":"Enviroment"},{"location":"Enviroment/#getgc","text":"function getgc(IncludeTables: boolean) -> <function | userdata | table> Returns a list of objects in the Luau garbage collector","title":"getgc"},{"location":"Enviroment/#parameters","text":"IncludeTables - Whether or not to include tables in the list.","title":"Parameters"},{"location":"Enviroment/#getgenv","text":"function getgenv() -> { table(any) } Returns the global environment of the executor","title":"getgenv"},{"location":"Enviroment/#getrenv","text":"function getrenv() -> { [string]: any } Returns the global environment of the game client","title":"getrenv"},{"location":"Enviroment/#getsenv","text":"function getsenv(Script: <LocalScript | ModuleScript>) -> { list(any) } Returns the global environment of the given script","title":"getsenv"},{"location":"Enviroment/#parameters_1","text":"Script - A client-running LocalScript or ModuleScript","title":"Parameters"},{"location":"Enviroment/#getloadedmodules","text":"function getloadedmodules(ExclodeCoreScripts: boolean) -> table(ModuleScript) Returns a list of ModuleScripts that have been loaded within the game","title":"getloadedmodules"},{"location":"Enviroment/#parameters_2","text":"ExcludeCoreScripts - Whether or not to exclude core modules from the list.","title":"Parameters"},{"location":"Enviroment/#getrunningscripts","text":"function getrunningscripts() -> table(LocalScript | ModuleScript) Returns a list of scripts that are currently running within the game","title":"getrunningscripts"},{"location":"Enviroment/#getscriptbytecode","text":"function getscriptbytecode(Script: <LocalScript | ModuleScript>) -> string Returns the raw Luau bytecode of the given script","title":"getscriptbytecode"},{"location":"Enviroment/#parameters_3","text":"Script - A client-running LocalScript or ModuleScript","title":"Parameters"},{"location":"Enviroment/#getscriptclosure","text":"function getscriptclosure(Script: <LocalScript | ModuleScript>) -> function Generates a new closure using the bytecode of Script","title":"getscriptclosure"},{"location":"Enviroment/#parameters_4","text":"Script - The target script to recreate it's closure","title":"Parameters"},{"location":"Enviroment/#getscripthash","text":"function getscripthash(Script: <LocalScript | ModuleScript>) -> string Returns the SHA384 hash of the script's bytecode","title":"getscripthash"},{"location":"Enviroment/#parameters_5","text":"Script - A client-running LocalScript or ModuleScript","title":"Parameters"},{"location":"Enviroment/#getscripts","text":"function getscripts() -> <LocalScript | ModuleScript> Get the scripts inside the game, both disabled and enabled","title":"getscripts"},{"location":"Enviroment/#getthreadidentity","text":"function getthreadidentity() -> number Returns the identity of the current thread","title":"getthreadidentity"},{"location":"Enviroment/#setthreadidentity","text":"function setthreadidentity(Identity: number) Changes the identity of the current thread to Identity","title":"setthreadidentity"}]}